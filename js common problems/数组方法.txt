1.
栈方法：push()  pop() ）
栈：LIFO 后进先出 只能在栈顶操作数据
push（）：可以接收任意数量的参数，并将其逐个添加到数组的末尾，并返回修改后数组的长度
var colors = new Array();
var count = colors.push("red", "blue");
alert(count);//2

count = colors.push("black");
alert(count);//3

pop（）;可以从数组的末尾移除最后一项，减少数组的length值，然后返回移除的值

var item = colors.pop();
alert(item); //black
alert(colors.length);//2

2.
队列方法：（有push(),pop(),新增shift() unshift() ）
队列：FIFO 先进先出
①、队列在列表的末端添加项，在列表的前端移除项（push（），shift（））
shift(),能够移除数组的第一个项并返回该项，同时数组的长度减1.
var colors = new Array();
var count = colors.push("red", "blue");
alert(count);//2

count = colors.push("black");
alert(count);//3

var item = colors.shift();
alert(item);//red;
alert(colors.length)//2

②、队列在列表的前端添加项，在列表的后端移除项（unshift(), pop()）
unshift():能够在数组的前端添加任意个项并返回新数组的长度。

var colors = new Array();
var count = colors.unshift("red","green");
alret(count);//2
count = colors.unshift("black");
alert(count);//3
alert(colors);// black,red,green

var item  = colors.pop();
alert(item);//green
alert(colors.length);//2 